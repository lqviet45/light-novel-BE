services:
  # PostgreSQL Database
  user-service-postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=noveldb'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=admin'
    ports:
      - '5432:5432'
    networks:
      - light-novel-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Consul Service Discovery
  consul:
    image: 'consul:1.15'
    container_name: consul-server
    command: 'agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0'
    ports:
      - '8500:8500'
    networks:
      - light-novel-network
    volumes:
      - consul_data:/consul/data

  # Keycloak Identity Provider
  keycloak:
    image: 'quay.io/keycloak/keycloak:25.0'
    container_name: keycloak-server
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
    ports:
      - '8080:8080'
    networks:
      - light-novel-network
    depends_on:
      - keycloak-postgres
    command:
      - start-dev

  # Keycloak Database
  keycloak-postgres:
    image: 'postgres:latest'
    container_name: keycloak-postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    networks:
      - light-novel-network
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data

  # User Service
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - '8081:8081'
    networks:
      - light-novel-network
    depends_on:
      - user-service-postgres
      - consul
      - keycloak
    environment:
      - SPRING_PROFILES_ACTIVE=docker

networks:
  light-novel-network:
    driver: bridge

volumes:
  postgres_data:
  keycloak_postgres_data:
  consul_data:
