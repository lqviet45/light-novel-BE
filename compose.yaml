services:
  user-service-postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=noveldb'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=admin'
    ports:
      - '5432:5432'
    networks:
      - internal
    volumes:
      - pgdata:/var/lib/postgresql/data

  # Redis for Auth Service
  auth-service-redis:
    image: 'redis:7-alpine'
    ports:
      - '6379:6379'
    networks:
      - internal
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  user-service:
#    image: 'lqviet455/user-service:latest'
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-service-postgres:5432/noveldb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
    ports:
      - '8000:8000'
    depends_on:
      - user-service-postgres
    networks:
      - internal
    # Auth Service
  auth-service:
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATA_REDIS_HOST: auth-service-redis
      SPRING_DATA_REDIS_PORT: 6379
      USER_SERVICE_URL: http://user-service:8000
      JWT_SECRET: "dGhpc2lzYXZlcnlzZWN1cmVzZWNyZXRrZXlmb3JsaWdodG5vdmVscGxhdGZvcm0yMDI1"
      SECURITY_CORS_ALLOWED_ORIGINS: "http://localhost:3000,http://localhost:3001,https://lightnovel.com"
    ports:
      - '8081:8081'
    depends_on:
      auth-service-redis:
        condition: service_healthy
      user-service:
        condition: service_healthy
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  internal:
    driver: bridge

volumes:
  pgdata:
  redisdata: