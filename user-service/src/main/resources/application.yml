server:
  port: 8081

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:postgresql://postgres:5432/noveldb
    username: admin
    password: secret
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  cloud:
    consul:
      host: consul
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
        health-check-path: /actuator/health
        health-check-interval: 10s
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/light-novel
          jwk-set-uri: http://keycloak:8080/realms/light-novel/protocol/openid-connect/certs

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://user-service-postgres:5432/noveldb
  cloud:
    consul:
      host: consul
      port: 8500
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/light-novel
          jwk-set-uri: http://keycloak:8080/realms/light-novel/protocol/openid-connect/certs
